Notes:

This version is essentially the same as Mark III but uses Boost::Thread to 
process input in one thread while rendering on another. This attempts to solve
the problem of not receiving input while the rendering thread waits for the
vertical synchronization signal (e.g. in glutSwapBuffers).

As with Mark II, this is a good version to watch the algorithm work.

Note that this project (Mark III thread) is not likely to get any functionality 
or performance improvements. Only some bug fixes are done and these are in the 
interest of allowing one to see how this version of the program looked like.


Issues:

Polylines can be selected even when invisible.

There is no synchronization between threads even though they share resources.
That causes a lot of crashes in debug mode where the corruption of the heap is 
detected.